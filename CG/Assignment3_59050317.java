import java.awt.*;
import javax.swing.*;

class Assignment3_59050317 extends JPanel {
	public static void main(String[] args) {
		Assignment3_59050317 m = new Assignment3_59050317();
		JFrame f =  new JFrame();   
		f.add(m);
		f.setTitle("59050317"); 
		f.setSize(600,600);   
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); 
		f.setVisible(true);
		Color myBG = new Color(247,255,176);
  		f.setBackground(myBG);
	}
	public void paintComponent(Graphics g) {
	//BG
		drawL(g,0,0,30,31, 255, 64, 64); //Corner L
		drawL(g,0,0,40,41, 255, 140, 105);
		drawL(g,0,0,50,51, 255, 165, 79);
		drawL(g,600,0,30,31, 255, 64, 64); //Corner R
		drawL(g,600,0,40,41, 255, 140, 105);
		drawL(g,600,0,50,51, 255, 165, 79);

		drawL(g,55,40,15,16, 255, 48, 48);
		drawL(g,85,29,15,16, 152, 251, 152);
		drawL(g,116,40,15,16, 255, 255, 255);
		drawL(g,147,29,15,16, 255, 48, 48);
		drawL(g,175,45,15,16, 152, 251, 152);
		drawL(g,205,33,15,16, 255, 255, 255);
		drawL(g,232,50,15,16, 255, 0,0);
		drawL(g,260,33,15,16, 152, 251, 152);
		drawL(g,289,50,15,16, 255, 255, 255);
		drawL(g,318,33,15,16, 255, 0,0);
		drawL(g,346,50,15,16, 152, 251, 152);
		drawL(g,375,33,15,16, 255, 255, 255);
		drawL(g,404,50,15,16, 255, 48, 48);
		drawL(g,430,29,15,16, 152, 251, 152);
		drawL(g,456,50,15,16, 255, 255, 255);
		drawL(g,484,29,15,16, 255, 48, 48);
		drawL(g,510,50,15,16, 152, 251, 152);
		drawL(g,536,28,15,16, 255, 255, 255);

	//Pan
		draw(g,147,355,49, 0,0,0);
		draw(g,432,157,49, 0,0,0);
		draw(g,290,256,173, 0,0,0);
		draw(g,290,256,160, 59,58,61);
		draw(g,290,256,150, 0,0,0);
	//Onion
		drawL(g,210,168,33,36, 54,107,10);
		drawL(g,210,180,33,36, 54,107,10);
		drawL(g,213,180,27,28, 89,130,54);
		drawL(g,196,201,33,36, 89,130,54);
		drawL(g,219,198,27,28, 54,107,10);
		drawL(g,220,204,27,28, 54,107,10);
		drawL(g,216,217,27,28, 89,130,54);
		drawL(g,183,217,33,36, 54,107,10);
		drawL(g,196,230,23,25, 54,107,10);
		drawL(g,216,217,27,28, 89,130,54);
		drawL(g,175,244,27,28, 89,130,54);
		drawL(g,210,241,27,28, 89,130,54);
	//Sauce
		//Brown
		draw(g,374,497,58, 71,28,11);
		draw(g,368,502,53, 95,38,11);
		drawL(g,376,498,58,60, 228,232,235);
		drawL(g,376,498,60,63, 255,255,255);
		draw(g,378,493,2, 210,188,112);
		draw(g,379,492,2, 210,188,112);
		draw(g,386,483,2, 210,188,112);
		draw(g,387,482,2, 210,188,112);
		draw(g,375,478,2, 210,188,112);
		draw(g,376,477,2, 210,188,112);
		draw(g,356,491,2, 210,188,112);
		draw(g,357,490,2, 210,188,112);
		draw(g,366,499,2, 210,188,112);
		draw(g,367,500,2, 210,188,112);
		draw(g,365,509,2, 210,188,112);
		draw(g,366,508,2, 210,188,112);
		draw(g,388,499,2, 210,188,112);
		draw(g,389,500,2, 210,188,112);
		draw(g,378,509,2, 34,30,31);
		draw(g,379,509,2, 34,30,31);
		draw(g,381,502,2, 34,30,31);
		draw(g,382,501,2, 34,30,31);
		draw(g,374,499,2, 34,30,31);
		draw(g,373,498,2, 34,30,31);
		draw(g,366,491,2, 34,30,31);
		draw(g,367,491,2, 34,30,31);
		draw(g,356,500,2, 34,30,31);
		draw(g,355,499,2, 34,30,31);
		draw(g,366,479,2, 34,30,31);
		draw(g,367,480,2, 34,30,31);
		draw(g,393,490,2, 34,30,31);
		draw(g,392,490,2, 34,30,31);
		//White
		draw(g,504,407,55, 211,162,96);
		draw(g,498,411,51, 242,192,119);
		drawL(g,505,407,58,60, 228,232,235);
		drawL(g,505,407,60,63, 255,255,255);
		draw(g,508,443,2, 211,162,96);
		draw(g,515,440,3, 211,162,96);
		draw(g,509,447,3, 211,162,96);
		draw(g,498,448,1, 211,162,96);
		draw(g,468,430,1, 211,162,96);
		draw(g,474,427,3, 211,162,96);
		draw(g,467,418,3, 211,162,96);
		draw(g,476,417,3, 211,162,96);
		draw(g,485,408,2, 211,162,96);
		draw(g,475,404,2, 211,162,96);
		draw(g,484,402,3, 211,162,96);
		draw(g,493,398,2, 211,162,96);
		draw(g,479,394,2, 211,162,96);
		draw(g,470,395,4, 211,162,96);
		draw(g,472,383,2, 211,162,96);
	//Carrot
		drawL(g,408,221,29,31, 224,122,11);
		drawL(g,411,231,20,23, 224,122,11);
		drawL(g,409,233,33,35, 178,74,12);
		drawL(g,394,241,26,28, 178,74,12);
		drawL(g,414,269,21,23, 224,122,11);
		drawL(g,392,265,32,35, 178,74,12);
		drawL(g,391,264,31,23, 224,122,11);
		drawL(g,408,276,33,35, 178,74,12);
		drawL(g,385,292,27,29, 224,122,11);
	//Noodle
		drawL(g,377,337,24,28, 94,40,30);
		drawL(g,373,338,24,28, 134,69,31);
		drawL(g,342,348,24,28, 134,69,31);
		drawL(g,341,344,24,28, 94,40,30);
		drawL(g,329,351,16,20, 94,40,30);
		drawL(g,368,335,16,20, 94,40,30);
		drawL(g,364,342,24,28, 94,40,30);
		drawL(g,369,347,24,28, 94,40,30);
		drawL(g,373,352,16,20, 94,40,30);
		drawL(g,336,362,24,28, 94,40,30);
		drawL(g,345,366,16,20, 94,40,30);
		drawL(g,317,368,24,28, 94,40,30);
		drawL(g,307,377,24,28, 94,40,30);
		drawL(g,300,349,24,28, 94,40,30);
		drawL(g,323,362,24,28, 94,40,30);
		drawL(g,323,362,24,28, 134,69,31);
		drawL(g,350,342,24,28, 134,69,31);
		drawL(g,364,347,24,28, 134,69,31);
		drawL(g,374,342,24,28, 134,69,31);
		drawL(g,369,360,24,28, 134,69,31);
		drawL(g,321,376,24,28, 134,69,31);
		drawL(g,313,350,24,28, 134,69,31);
		drawL(g,313,361,16,20, 94,40,30);
		drawL(g,344,372,24,28, 134,69,31);
		drawL(g,366,3577,24,28, 134,69,31);
		drawL(g,304,370,24,28, 134,69,31);
		draw(g,367,345,23, 136,152,42);
		draw(g,369,347,20, 177,204,51);
		draw(g,378,351,7, 199,224,117);
		draw(g,378,351,3, 208,223,140);
		draw(g,316,364,23, 136,152,42);
		draw(g,316,362,20, 177,204,51);
		draw(g,318,351,7, 199,224,117);
		draw(g,317,349,3, 208,223,140);
	//tomato
		draw(g,312,149,43, 184,11,20);//c
		draw(g,312,149,40, 194,36,30);
		draw(g,311,149,34, 223,110,61);
		draw(g,321,139,2, 191,46,33);
		draw(g,325,137,3, 191,46,33);
		draw(g,326,133,3, 191,46,33);
		draw(g,361,176,43, 176,14,15);//R
		draw(g,362,177,40, 194,36,30);
		draw(g,362,176,34, 223,110,61);
		draw(g,350,184,4, 191,46,33);
		draw(g,353,182,2, 191,46,33);
		draw(g,356,180,0, 191,46,33);
		draw(g,367,187,4, 191,46,33);
		draw(g,366,185,2, 191,46,33);
		draw(g,364,180,1, 191,46,33);
		draw(g,377,173,4, 191,46,33);
		draw(g,374,175,2, 191,46,33);
		draw(g,370,174,1, 191,46,33);
		draw(g,367,162,4, 191,46,33);
		draw(g,367,165,2, 191,46,33);
		draw(g,365,169,1, 191,46,33);
		draw(g,350,165,4, 191,46,33);
		draw(g,354,168,2, 191,46,33);
		draw(g,356,170,1, 191,46,33);
		draw(g,280,149,43, 163,14,20);//L
		draw(g,281,149,40, 207,37,45);
		draw(g,280,149,34, 223,110,61);
		draw(g,267,138,3, 191,46,33);
		draw(g,271,141,3, 191,46,33);
		draw(g,273,143,2, 191,46,33);
		draw(g,284,135,3, 191,46,33);
		draw(g,284,138,3, 191,46,33);
		draw(g,282,142,2, 191,46,33);
		draw(g,294,146,3, 191,46,33);
		draw(g,291,148,3, 191,46,33);
		draw(g,287,147,2, 191,46,33);
		draw(g,284,160,3, 191,46,33);
		draw(g,283,158,3, 191,46,33);
		draw(g,281,153,2, 191,46,33);
		draw(g,267,157,4, 191,46,33);
		draw(g,270,155,3, 191,46,33);
		draw(g,273,153,2, 191,46,33);
	//meat
		draw(g,236,350,50, 165,45,31);   //R
		draw(g,221,350,38, 231,212,195);
		draw(g,249,345,27, 231,212,195);
		draw(g,250,357,27, 231,212,195);
		draw(g,242,322,27, 231,212,195);
		draw(g,249,331,27, 231,212,195);
		draw(g,234,317,27, 231,212,195);
		draw(g,255,362,24, 218,127,106);
		draw(g,222,345,24, 218,127,106);
		draw(g,230,339,24, 218,127,106);
		draw(g,215,354,24, 218,127,106);
		draw(g,217,370,20, 218,127,106);
		draw(g,235,372,19, 194,91,76);
		draw(g,227,368,19, 194,91,76);
		draw(g,223,373,19, 194,91,76);
		draw(g,224,376,19, 194,91,76);
		draw(g,244,382,17, 194,91,76);
		draw(g,234,379,20, 215,185,161);
		draw(g,199,309,50, 165,45,31);   //L
		draw(g,210,299,38, 231,212,195);
		draw(g,219,306,38, 231,212,195);
		draw(g,220,333,27, 231,212,195);
		draw(g,221,333,27, 231,212,195);
		draw(g,199,332,27, 231,212,195);
		draw(g,190,321,27, 231,212,195);
		draw(g,182,312,27, 231,212,195);
		draw(g,200,281,24, 218,127,106);
		draw(g,176,312,24, 218,127,106);
		draw(g,212,304,24, 218,127,106);
		draw(g,210,314,24, 218,127,106);
		draw(g,212,292,24, 218,127,106);
		draw(g,184,291,19, 194,91,76);
		draw(g,193,289,19, 194,91,76);
		draw(g,193,282,19, 194,91,76);
		draw(g,190,280,19, 194,91,76);
		draw(g,172,289,17, 194,91,76);
		draw(g,180,285,20, 215,185,161);
	//egg
		draw(g,320,226,47, 255,255,255);
		draw(g,270,225,44, 255,255,255);
		draw(g,250,269,43, 255,255,255);
		draw(g,286,290,35, 255,255,255);
		draw(g,300,260,56, 255,255,255);
		draw(g,317,280,43, 255,255,255);
		draw(g,289,254,37, 253,133,37);
		draw(g,287,250,38, 253,133,37);
		draw(g,289,250,36, 255,162,35);
		draw(g,293,266,14, 253,196,134);
		draw(g,290,268,13, 253,196,134);
		draw(g,305,231,10, 255,211,162);
		draw(g,303,232,9, 255,211,162);
	}
	public void midpointCircle(Graphics g,int xc, int yc, int r) {
		int x = 0;
		int y = r;
		int Dx = 2 * x;
		int Dy = 2 * y;
		int D = 1 - r;
		while (x <= y) {
			plot(g, x+xc, y+yc);
			plot(g, y+xc, x+yc);
			plot(g, y+xc,-x+yc);
			plot(g, x+xc,-y+yc);
			plot(g,-x+xc,-y+yc);
			plot(g,-y+xc,-x+yc);
			plot(g,-y+xc, x+yc);
			plot(g,-x+xc, y+yc);
			x++;
			Dx += 2;
			D = D + Dx + 1;
			if (D >= 0) {
				y--;
				Dy -= 2;
				D = D - Dy;
			}
		}
	}
	private void plot (Graphics g, int x, int y) {
    	g.fillRect(x, y, 2, 2);
    }
    public void draw(Graphics g, int x, int y, int radius, int R, int G, int B) {
    	Color myColor = new Color(R,G,B);
		g.setColor(myColor);
		for (int i=0; i <= radius; i++) {
			midpointCircle(g,x,y,i);
		}
    }
    public void drawL(Graphics g, int x, int y, int r1,int r2, int R, int G, int B) {
    	Color myColor = new Color(R,G,B);
		g.setColor(myColor);
		for (int i=r1; i <= r2; i++) {
			midpointCircle(g,x,y,i);
		}
    }
}